- alias: Reboot Nabaztag at start
  trigger:
    - platform: homeassistant
      event: start
  action:
    - service: shell_command.nab_reboot
    - service: switch.turn_on
      entity_id: switch.nabaztaglife
#******************************************************************************
- alias: "Nabaztag Sounds"
  trigger:
  - platform: state
    entity_id: input_select.nabaztag_sounds
  condition:
    condition: template
    value_template: "{{ not is_state('input_select.nabaztag_sounds', ' ') }}"
  action:
  - service_template: >
      {% if is_state("input_select.nabaztag_sounds", "Communication") %} shell_command.nab_communication
      {% elif is_state("input_select.nabaztag_sounds", "Ack") %} shell_command.nab_ack
      {% elif is_state("input_select.nabaztag_sounds", "Abort") %} shell_command.nab_abort
      {% elif is_state("input_select.nabaztag_sounds", "Ministop") %} shell_command.nab_ministop
      {% else %}
        shell_command.nab_abort
      {% endif %}
  - service: input_select.select_option
    data:
      entity_id: input_select.nabaztag_sounds
      option: " "
#******************************************************************************
- alias: "Nabaztag Talk"
  trigger:
  - platform: state
    entity_id: input_text.nabaztag_voice
  condition:
    condition: template
    value_template: "{{ not is_state('input_text.nabaztag_voice', ' ') }}"
  action:
  - service: script.nabaztag_talk
    data_template:
      message: "{{ states('input_text.nabaztag_voice') }}"
  - service: input_text.set_value
    data:
      entity_id: input_text.nabaztag_voice
      value: ' '
#******************************************************************************
- alias: "Nabaztag Taichi"
  trigger:
  - platform: state
    entity_id: input_select.nabaztag_taichi
  action:
  - service_template: >
      {%-if is_state("input_select.nabaztag_taichi", "Taichi min") %} shell_command.nab_taichi_min
      {%-elif is_state("input_select.nabaztag_taichi", "Taichi medium") %} shell_command.nab_taichi_medium
      {% elif is_state("input_select.nabaztag_taichi", "Taichi max") %} shell_command.nab_taichi_max
      {% else %}
        shell_command.nab_surprise
      {% endif %}
#******************************************************************************
- alias: "Nabaztag Nose"
  trigger:
  - platform: state
    entity_id: input_select.nabaztag_nose
  action:
  - service_template: >
      {% if is_state("input_select.nabaztag_nose", "Todo") %} shell_command.nab_nose_2
      {% elif is_state("input_select.nabaztag_nose", "Urgent") %} shell_command.nab_nose_3
      {% elif is_state("input_select.nabaztag_nose", "Panic") %} shell_command.nab_nose_4
      {% else %}
        shell_command.nab_abort
      {% endif %}